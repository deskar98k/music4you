// Generated by view binder compiler. Do not edit!
package ru.samsung.kotlin.music4you.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.samsung.kotlin.music4you.R;

public final class FragmentPlayerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomControls;

  @NonNull
  public final ImageButton playerNextButton;

  @NonNull
  public final ImageButton playerPlayPauseButton;

  @NonNull
  public final ImageButton playerPreviousButton;

  @NonNull
  public final ImageButton playerRepeatButton;

  @NonNull
  public final TextView songArtist;

  @NonNull
  public final TextView songDuration;

  @NonNull
  public final ImageView songImage;

  @NonNull
  public final LinearLayout songInfoContainer;

  @NonNull
  public final SeekBar songProgressSeekBar;

  @NonNull
  public final TextView songTitle;

  private FragmentPlayerBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomControls, @NonNull ImageButton playerNextButton,
      @NonNull ImageButton playerPlayPauseButton, @NonNull ImageButton playerPreviousButton,
      @NonNull ImageButton playerRepeatButton, @NonNull TextView songArtist,
      @NonNull TextView songDuration, @NonNull ImageView songImage,
      @NonNull LinearLayout songInfoContainer, @NonNull SeekBar songProgressSeekBar,
      @NonNull TextView songTitle) {
    this.rootView = rootView;
    this.bottomControls = bottomControls;
    this.playerNextButton = playerNextButton;
    this.playerPlayPauseButton = playerPlayPauseButton;
    this.playerPreviousButton = playerPreviousButton;
    this.playerRepeatButton = playerRepeatButton;
    this.songArtist = songArtist;
    this.songDuration = songDuration;
    this.songImage = songImage;
    this.songInfoContainer = songInfoContainer;
    this.songProgressSeekBar = songProgressSeekBar;
    this.songTitle = songTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_controls;
      LinearLayout bottomControls = ViewBindings.findChildViewById(rootView, id);
      if (bottomControls == null) {
        break missingId;
      }

      id = R.id.player_next_button;
      ImageButton playerNextButton = ViewBindings.findChildViewById(rootView, id);
      if (playerNextButton == null) {
        break missingId;
      }

      id = R.id.player_play_pause_button;
      ImageButton playerPlayPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (playerPlayPauseButton == null) {
        break missingId;
      }

      id = R.id.player_previous_button;
      ImageButton playerPreviousButton = ViewBindings.findChildViewById(rootView, id);
      if (playerPreviousButton == null) {
        break missingId;
      }

      id = R.id.player_repeat_button;
      ImageButton playerRepeatButton = ViewBindings.findChildViewById(rootView, id);
      if (playerRepeatButton == null) {
        break missingId;
      }

      id = R.id.song_artist;
      TextView songArtist = ViewBindings.findChildViewById(rootView, id);
      if (songArtist == null) {
        break missingId;
      }

      id = R.id.song_duration;
      TextView songDuration = ViewBindings.findChildViewById(rootView, id);
      if (songDuration == null) {
        break missingId;
      }

      id = R.id.song_image;
      ImageView songImage = ViewBindings.findChildViewById(rootView, id);
      if (songImage == null) {
        break missingId;
      }

      id = R.id.song_info_container;
      LinearLayout songInfoContainer = ViewBindings.findChildViewById(rootView, id);
      if (songInfoContainer == null) {
        break missingId;
      }

      id = R.id.songProgressSeekBar;
      SeekBar songProgressSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (songProgressSeekBar == null) {
        break missingId;
      }

      id = R.id.song_title;
      TextView songTitle = ViewBindings.findChildViewById(rootView, id);
      if (songTitle == null) {
        break missingId;
      }

      return new FragmentPlayerBinding((RelativeLayout) rootView, bottomControls, playerNextButton,
          playerPlayPauseButton, playerPreviousButton, playerRepeatButton, songArtist, songDuration,
          songImage, songInfoContainer, songProgressSeekBar, songTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
