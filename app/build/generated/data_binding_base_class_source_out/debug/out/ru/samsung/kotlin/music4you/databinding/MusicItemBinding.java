// Generated by view binder compiler. Do not edit!
package ru.samsung.kotlin.music4you.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.samsung.kotlin.music4you.R;

public final class MusicItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView musicAutor;

  @NonNull
  public final TextView musicDuration;

  @NonNull
  public final ImageView musicIcon;

  @NonNull
  public final LinearLayout musicInfo;

  @NonNull
  public final TextView musicName;

  private MusicItemBinding(@NonNull RelativeLayout rootView, @NonNull TextView musicAutor,
      @NonNull TextView musicDuration, @NonNull ImageView musicIcon,
      @NonNull LinearLayout musicInfo, @NonNull TextView musicName) {
    this.rootView = rootView;
    this.musicAutor = musicAutor;
    this.musicDuration = musicDuration;
    this.musicIcon = musicIcon;
    this.musicInfo = musicInfo;
    this.musicName = musicName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MusicItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MusicItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.music_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MusicItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.music_autor;
      TextView musicAutor = ViewBindings.findChildViewById(rootView, id);
      if (musicAutor == null) {
        break missingId;
      }

      id = R.id.music_duration;
      TextView musicDuration = ViewBindings.findChildViewById(rootView, id);
      if (musicDuration == null) {
        break missingId;
      }

      id = R.id.music_icon;
      ImageView musicIcon = ViewBindings.findChildViewById(rootView, id);
      if (musicIcon == null) {
        break missingId;
      }

      id = R.id.music_info;
      LinearLayout musicInfo = ViewBindings.findChildViewById(rootView, id);
      if (musicInfo == null) {
        break missingId;
      }

      id = R.id.music_name;
      TextView musicName = ViewBindings.findChildViewById(rootView, id);
      if (musicName == null) {
        break missingId;
      }

      return new MusicItemBinding((RelativeLayout) rootView, musicAutor, musicDuration, musicIcon,
          musicInfo, musicName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
